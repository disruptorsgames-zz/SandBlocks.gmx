<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_girl</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_speed = 5;

// animation sequence
idleRight = 0;
idleLeft = 1;
leftStart = 2;
leftEnd = 9;
rightStart = 10;
rightEnd = 17;

item = 0;

phy_fixed_rotation = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 
switch (item)
{
    case o_axe:
        idleRight = 18;
        idleLeft = 19;
        leftStart = 20;
        leftEnd = 27;
        rightStart = 28;
        rightEnd = 35;
        break;
}

// move left
if (keyboard_check(vk_left))
{
    // image sequence (at half speed)
    if (image_index &gt;= leftStart &amp;&amp; image_index &lt;= leftEnd)
    {
        image_speed = 0.5;
        phy_speed_x = -move_speed;
    }
    // set starting image
    else
        image_index = leftStart;
}
// move right
else if (keyboard_check(vk_right))
{
    // image sequence (at half speed)
    if (image_index &gt;= rightStart &amp;&amp; image_index &lt;= rightEnd)
    {
        image_speed = 0.5;
        phy_speed_x = move_speed;
    }
    // set starting image
    else
        image_index = rightStart;
}
// standing still
else
{
    // idle right
    if (image_index &gt;= rightStart)
        image_index = idleRight;
    // idle left
    else if (image_index &gt;= leftStart)
        image_index = idleLeft;
    
    image_speed = 0; 
    phy_speed_x = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_axe">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (o_tutorial.stage == 2)
{
    // move to next stage
    o_tutorial.stage += 1;
    // show questbook indication
    audio_play_sound(sfx_quest, 10, false);
    o_questbook.image_blend = c_green;
    o_questbook.alarm[0] = 45;
    // get the axe
    item = o_axe;
}

with (other) { instance_destroy(); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>1</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,8</point>
    <point>64,8</point>
    <point>64,128</point>
    <point>16,128</point>
  </PhysicsShapePoints>
</object>
